# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class ClientProperty(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsClientProperty(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ClientProperty()
        x.Init(buf, n + offset)
        return x

    # ClientProperty
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ClientProperty
    def NodeName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # ClientProperty
    def MyIp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # ClientProperty
    def IsPublisher(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 0

    # ClientProperty
    def TopicPort(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ClientProperty
    def TargetNodeName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # ClientProperty
    def TargetIP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # ClientProperty
    def TargetPort(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ClientPropertyStart(builder): builder.StartObject(7)
def ClientPropertyAddNodeName(builder, nodeName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(nodeName), 0)
def ClientPropertyAddMyIp(builder, myIp): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(myIp), 0)
def ClientPropertyAddIsPublisher(builder, isPublisher): builder.PrependBoolSlot(2, isPublisher, 0)
def ClientPropertyAddTopicPort(builder, topicPort): builder.PrependInt32Slot(3, topicPort, 0)
def ClientPropertyAddTargetNodeName(builder, targetNodeName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(targetNodeName), 0)
def ClientPropertyAddTargetIP(builder, targetIP): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(targetIP), 0)
def ClientPropertyAddTargetPort(builder, targetPort): builder.PrependInt32Slot(6, targetPort, 0)
def ClientPropertyEnd(builder): return builder.EndObject()
